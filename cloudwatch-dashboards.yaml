AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a CloudWatch Dashboard and Alarms for an enhanced e-commerce infrastructure.

Parameters:
  AutoScalingGroupName:
    Type: String
    Description: Name of the Auto Scaling Group

  ALBAppName:
    Type: String
    Description: App Name of the Application Load Balancer (from ARN, copy from app, no need of slash before app)

  RDSInstanceIdentifier:
    Type: String
    Description: RDS Instance Identifier

  CloudFrontDistributionId:
    Type: String
    Description: ID of the CloudFront Distribution

  WAFWebACLName:
    Type: String
    Description: Name of the WAF Web ACL

  SNSEmail:
    Type: String
    Description: Email address to send alarm notifications

  SNSMobileNo:
    Type : String
    Description : Mobile no. to send notifications

  BlockedRequestAlarmThreshold:
    Type: Number
    Default: 20
    Description: Threshold for the cloud alarm to trigger an action for blocked request.

  AllowedRequestAlarmThreshold:
    Type: Number
    Default: 200
    Description: Threshold for the cloud alarm to trigger an action for blocked request.


Resources:




  # SNS Topic for CloudWatch Alarm Notifications
  AlarmSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: EcommerceApplicationAlarmNotification

  # Subscription to receive email notifications
  AlarmEmailSubscription:
    Type: AWS::SNS::Subscription
    DependsOn: AlarmSNSTopic  # Ensure SNS Topic is created first
    Properties:
      TopicArn: !Ref AlarmSNSTopic
      Protocol: email  # Notification type: email
      Endpoint: !Ref SNSEmail

  # Subscription to receive SMS notifications
  AlarmSMSSubscription:
    Type: AWS::SNS::Subscription
    DependsOn: AlarmSNSTopic  # Ensure SNS Topic is created first
    Properties:
      TopicArn: !Ref AlarmSNSTopic
      Protocol: sms  # Notification type: SMS
      Endpoint: !Ref SNSMobileNo







  # CloudWatch Dashboard
  ECommerceDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: ECommerceDashboard
      DashboardBody: 
        Fn::Sub: |
          {
            "widgets": [
              {
                "type": "metric",
                "x": 0,
                "y": 0,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [                  
                    [ "AWS/AutoScaling", "GroupTotalCapacity", "AutoScalingGroupName", "${AutoScalingGroupName}" ],
                    [ ".", "GroupMinSize", ".", "." ],
                    [ ".", "GroupStandbyInstances", ".", "." ],
                    [ ".", "GroupTerminatingInstances", ".", "." ],
                    [ ".", "GroupPendingInstances", ".", "." ],
                    [ ".", "GroupInServiceInstances", ".", "." ],
                    [ ".", "GroupDesiredCapacity", ".", "." ],
                    [ ".", "GroupMaxSize", ".", "." ],
                    [ "AWS/EC2", "CPUUtilization", ".", "." ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "us-east-1",
                  "title": "EC2 Auto Scaling - CPU Utilization & Instance Count"
                }
              },
              {
                "type": "metric",
                "x": 12,
                "y": 0,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                      [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "${ALBAppName}" ],
                      [ ".", "HTTPCode_Target_4XX_Count", ".", "." ],
                      [ ".", "TargetResponseTime", ".", "." ],
                      [ ".", "PeakLCUs", ".", "." ],
                      [ ".", "ConsumedLCUs", ".", "." ],
                      [ ".", "HTTPCode_Target_5XX_Count", ".", "." ],  
                      [ ".", "TargetResponseTime", ".", "." ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "us-east-1",
                  "title": "ALB - Request Count, Errors & Latency"
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 6,
                "width": 24,
                "height": 6,
                "properties": {
                  "metrics": [
                    [ "AWS/RDS", "DatabaseConnections", "DBInstanceIdentifier", "${RDSInstanceIdentifier}" ],
                    [ ".", "ReadIOPS", ".", "." ],
                    [ ".", "WriteIOPS", ".", "." ],
                    [ ".", "ReadLatency", ".", "." ],
                    [ ".", "WriteLatency", ".", "." ],
                    [ ".", "CPUUtilization", ".", "." ],
                    [ "AWS/RDS", "ReplicaLag", "DBInstanceIdentifier", "${RDSInstanceIdentifier}" ], 
                    [ "AWS/RDS", "FailoverCount", "DBInstanceIdentifier", "${RDSInstanceIdentifier}" ] 
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "us-east-1",
                  "title": "RDS - Query Performance Metrics"
                }
              },
              {
                "type": "metric",
                "x": 12,
                "y": 6,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [ "AWS/CloudFront", "5xxErrorRate", "Region", "Global", "DistributionId", "${CloudFrontDistributionId}" ],
                    [ ".", "Requests", ".", ".", ".", "." ],
                    [ ".", "4xxErrorRate", ".", ".", ".", "." ],
                    [ ".", "TotalErrorRate", ".", ".", ".", "." ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "us-east-1",
                  "title": "CloudFront - Requests, Errors Rate"
                }
              },
              {
                "type": "metric",
                "x": 0,
                "y": 6,
                "width": 12,
                "height": 6,
                "properties": {
                  "metrics": [
                    [ "AWS/WAFV2", "AllowedRequests", "WebACL", "${WAFWebACLName}", "Device", "Mobile", "Region", "us-east-1" ],
                    [ "...", "Desktop", ".", "." ],
                    [ "...", "Tablet", ".", "." ],
                    [ ".", "BlockedRequests", ".", ".", "Region", "us-east-1", "Rule", "ALL" ],
                    [ ".", "AllowedRequests", ".", ".", ".", ".", ".", "." ]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "region": "us-east-1",
                  "title": "WAF - Requests (Blocked, Allowed & Sampled)"
                }
              }
              
            ]
          }





  # High CPU Utilization Alarm for EC2 Auto Scaling Group
  HighCPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-EC2-CPU-Utilization"
      AlarmDescription: "Scale up instances when CPU exceeds 50% and notify admin"  # Description of the alarm for easy identification
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: 60
      EvaluationPeriods: 2
      Threshold: 50
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroupName
      AlarmActions:
        - !Ref AlarmSNSTopic
        - !ImportValue "ec2Config-ScaleUpPolicyARN" 



  # CloudWatch Alarm for scaling down when CPU is below 20%
  LowCPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm  # CloudWatch alarm to monitor low CPU utilization
    Properties:
      AlarmName: "Low-EC2-CPU-Utilization"
      AlarmDescription: "Scale down instances when CPU utilizatio is lower than 20% "  
      MetricName: CPUUtilization
      Namespace: AWS/EC2  # The AWS namespace for EC2 metrics
      Statistic: Average  
      Period: 60  # Check the CPU every 60 seconds
      EvaluationPeriods: 2  # Alarm will trigger if CPU drops below 20% for 2 consecutive periods
      Threshold: 20  
      ComparisonOperator: LessThanThreshold  # Trigger the alarm when CPU is less than the threshold
      AlarmActions:
        - !ImportValue "ec2Config-ScaleDownPolicyARN" 
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroupName  # Associate the alarm with the Auto Scaling group


  # Low In-Service Instances Alarm
  LowInServiceInstancesAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "Low-In-Service-Instances"
      MetricName: "GroupInServiceInstances"
      Namespace: "AWS/AutoScaling"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: 2
      ComparisonOperator: "LessThanThreshold"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroupName
      AlarmActions:
        - !Ref AlarmSNSTopic



  # High Pending Instances Alarm
  HighPendingInstancesAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-Pending-Instances"
      MetricName: "GroupPendingInstances"
      Namespace: "AWS/AutoScaling"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: 2
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroupName
      AlarmActions:
        - !Ref AlarmSNSTopic



  # High 4XX Error Rate Alarm for ALB
  HighALB4xxErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-ALB-4XX-Error-Rate"
      MetricName: "HTTPCode_Target_4XX_Count"
      Namespace: "AWS/ApplicationELB"
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref ALBAppName
      AlarmActions:
        - !Ref AlarmSNSTopic
      TreatMissingData: notBreaching



  # High Latency Alarm for ALB
  HighALBLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-ALB-Latency"
      MetricName: "TargetResponseTime"
      Namespace: "AWS/ApplicationELB"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref ALBAppName
      AlarmActions:
        - !Ref AlarmSNSTopic



  # High Database Connections Alarm
  HighDatabaseConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-RDS-Connections"
      MetricName: "DatabaseConnections"
      Namespace: "AWS/RDS"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: 100
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref RDSInstanceIdentifier
      AlarmActions:
        - !Ref AlarmSNSTopic



  # High 5XX Error Rate Alarm for CloudFront
  HighCloudFront5xxErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-CloudFront-5XX-Error-Rate"
      MetricName: "5xxErrorRate"
      Namespace: "AWS/CloudFront"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: 2
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistributionId
        - Name: Region
          Value: "Global"
      AlarmActions:
        - !Ref AlarmSNSTopic
      TreatMissingData: notBreaching



  WAFAllowedRequestsAlarm:  
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: WAFAllowedRequestsAlarm
      AlarmDescription: "Alarm when WAF allows requests beyond a threshold"
      MetricName: AllowedRequests
      Namespace: AWS/WAFV2
      Dimensions: 
        - Name: WebACL
          Value: EcommerceWAFACL 
        - Name: "Region"
          Value: !Sub "${AWS::Region}"
        - Name: "Rule"
          Value: "ALL"
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: !Ref AllowedRequestAlarmThreshold 
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopic  # SNS Topic for the alarm actions
      # OKActions:
      #   - !Ref AlarmSNSTopic  # Optional: Sends notification when the alarm is resolved



  WAFBlockedRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: WAFBlockedRequestsAlarm
      MetricName: BlockedRequests
      Namespace: AWS/WAFV2
      Dimensions:
        - Name: WebACL
          Value: EcommerceWAFACL 
        - Name: "Region"
          Value: !Sub "${AWS::Region}"
        - Name: "Rule"
          Value: "ALL"
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: !Ref BlockedRequestAlarmThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlarmSNSTopic  # SNS Topic for the alarm actions


  # Alarm using the metric created by the filter
  WAFLogBlockedRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "WAFLogBlockedRequestsHigh"
      AlarmDescription: "Alarm when WAF blocks too many requests according to the log generated"
      Namespace: "Ecommerce/WAFV2"  # Using the custom namespace created by the Metric Filter
      MetricName: "BlockedRequests"
      Statistic: Sum
      Period: 300  
      EvaluationPeriods: 1
      Threshold: !Ref BlockedRequestAlarmThreshold  # Trigger alarm when blocked requests exceed 100 in the given period
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlarmSNSTopic  # Sends notification to SNS when the alarm is triggered
      TreatMissingData: notBreaching

  
  HighRDSReadLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "High-RDS-Read-Latency"
      AlarmDescription: "Alarm when RDS Read Latency exceeds acceptable threshold"
      MetricName: "ReadLatency"
      Namespace: "AWS/RDS"
      Statistic: "Average"
      Period: 60
      EvaluationPeriods: 2
      Threshold: 0.1 
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref RDSInstanceIdentifier
      AlarmActions:
        - !Ref AlarmSNSTopic
      TreatMissingData: notBreaching 




Outputs:
  CloudWatchDashboardName:
    Description: Name of the CloudWatch Dashboard
    Value: !Ref ECommerceDashboard

  AlarmSNSTopicArn:
    Description: ARN of the SNS Topic for Alarm Notifications
    Value: !Ref AlarmSNSTopic

